using libMBIN.NMS.Toolkit;
using libMBIN.NMS.GameComponents;

namespace libMBIN.NMS.Globals
{
    [NMS(GUID = 0xEBDDBF5AB9DB5680)]
    public class GcCameraGlobals : NMSTemplate
    {
        /* 0x0000 */ public float TogglePerspectiveBlendTime;
        /* 0x0004 */ public float ThirdPersonAfterIntroCamBlendTime;
        /* 0x0008 */ public float ThirdPersonSkipIntroCamBlendTime;
        /* 0x000C */ public float ShipThirdPersonBlendTime;
        /* 0x0010 */ public float ShipThirdPersonBlendOffset;
        /* 0x0014 */ public float ShipFirstPersonBlendTime;
        /* 0x0018 */ public float ShipFirstPersonBlendOffset;
        /* 0x001C */ public float FlybyMinRange;
        /* 0x0020 */ public float FlybyRange;
        /* 0x0024 */ public float FlybyMinRelativeSpeed;
        /* 0x0028 */ public float FlybyRelativeSpeedRange;
        /* 0x002C */ public float FlybyInVehicleDamper;
        /* 0x0030 */ public float BinocularFlashTime;
        /* 0x0034 */ public float BinocularFlashStrength;
        /* 0x0038 */ public float MinFirstPersonCameraPitch;
        /* 0x003C */ public float MaxFirstPersonCameraPitch;
        /* 0x0040 */ public GcCameraFollowSettings CharacterUnarmedCam;
        /* 0x0120 */ public GcCameraFollowSettings CharacterRunCam;
        /* 0x0200 */ public GcCameraFollowSettings CharacterCombatCam;
        /* 0x02E0 */ public GcCameraFollowSettings CharacterIndoorCam;
        /* 0x03C0 */ public GcCameraFollowSettings CharacterAirborneCam;
        /* 0x04A0 */ public GcCameraFollowSettings CharacterMeleeBoostCam;
		/* 0x0580 */ public GcCameraFollowSettings CharacterRocketBootsCam;
		/* 0x0660 */ public GcCameraFollowSettings CharacterRocketBootsChargeCam;
		/* 0x0740 */ public GcCameraFollowSettings CharacterFallingCam;
		/* 0x0820 */ public GcCameraFollowSettings CharacterAirborneCombatCam;
		/* 0x0900 */ public GcCameraFollowSettings CharacterSteepSlopeCam;
		/* 0x09E0 */ public GcCameraFollowSettings CharacterUnderwaterCam;
		/* 0x0AC0 */ public float ThirdPersonCameraChangeBlendTime;
        [NMS(Size = 0x4, Ignore = true)]
        /* 0x0AC4 */ public byte[] PaddingAC4;
        /* 0x0AC8 */ public GcCameraFollowSettings BuggyFollowCam;
		/* 0x0BA8 */ public GcCameraFollowSettings BikeFollowCam;
		/* 0x0C88 */ public GcCameraFollowSettings TruckFollowCam;
		/* 0x0D68 */ public GcCameraFollowSettings SpaceshipFollowCam;
		/* 0x0E48 */ public GcCameraFollowSettings DropshipFollowCam;
		/* 0x0F28 */ public GcCameraFollowSettings ShuttleFollowCam;
		/* 0x1008 */ public GcCameraFollowSettings RoyalShipFollowCam;
		/* 0x10E8 */ public GcCameraFollowSettings ScienceShipFollowCam;
		/* 0x11C8 */ public float FrontendModelCameraSpringTime;
		/* 0x11CC */ public float ModelViewFlashTime;
		/* 0x11D0 */ public Vector4f ModelViewOffset;
		/* 0x11E0 */ public Vector2f ModelViewFocusOffset;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x11E8 */ public byte[] Padding11E8;
        /* 0x11F0 */ public Vector4f InteractionOffset;
        /* 0x1200 */ public Vector4f InteractionShipFocusOffset;
        /* 0x1210 */ public float DistanceForFleetInteraction;
        /* 0x1214 */ public float DistanceForFrigateInteraction;
        /* 0x1218 */ public float DistanceForFrigatePurchaseInteraction;
        [NMS(Size = 0x4, Ignore = true)]
        /* 0x121C */ public byte[] Padding121C;
        /* 0x1220 */ public Vector4f OffsetForFleetInteraction;
        /* 0x1230 */ public Vector4f OffsetForFrigateInteraction;
        /* 0x1240 */ public float FleetUIOrbitRate;
        /* 0x1244 */ public float FleetUIVerticalMotionDuration;
        /* 0x1248 */ public float FleetUIVerticalMotionAmplitude;
        /* 0x124C */ public Vector2f PitchForFrigateInteraction;
        /* 0x1254 */ public Vector2f RotationForFrigateInteraction;
        /* 0x125C */ public float InteractionModeBlendTime;
        /* 0x1260 */ public float InteractionModeFocusCamBlend;
        /* 0x1264 */ public float InteractionModeFoV;
        /* 0x1268 */ public float MinInteractFocusAngle;
        /* 0x126C */ public float ModelViewInterpTime;
        /* 0x1270 */ public float ThirdPersonBlendInTime;
        /* 0x1274 */ public float ThirdPersonBlendOutTime;
        /* 0x1278 */ public float ThirdPersonCollisionPushOffsetReducerStart;
        /* 0x127C */ public float ThirdPersonOffsetSpringTime;
        /* 0x1280 */ public bool MaxBob;
        [NMS(Size = 0x3, Ignore = true)]
        /* 0x1281 */ public byte[] Padding1281;
        /* 0x1284 */ public float PhotoModeMoveSpeed;
        /* 0x1288 */ public float PhotoModeTurnSpeed;
        /* 0x128C */ public float PhotoModeMaxDistance;
        /* 0x1290 */ public float PhotoModeMaxDistanceSpace;
        /* 0x1294 */ public float PhotoModeMaxDistanceClampForce;
        /* 0x1298 */ public float PhotoModeMaxDistanceClampBuffer;
        /* 0x129C */ public float PhotoModeCollisionRadius;
        /* 0x12A0 */ public float PhotoModeRollSpeed;
        /* 0x12A4 */ public float PhotoModeFlashDuration;
        /* 0x12A8 */ public float PhotoModeFlashIntensity;
        [NMS(Size = 0x4, Ignore = true)]
        /* 0x12AC */ public byte[] Padding12AC;
        /* 0x12B0 */ public Vector4f PhotoModeShipOffset;
        /* 0x12C0 */ public float RunningFoVAdjust;
        /* 0x12C4 */ public float MeleeBoostedFoV;
        /* 0x12C8 */ public float MeleeFoV;
        /* 0x12CC */ public float AerialViewDownDistance;
        /* 0x12D0 */ public float AerialViewPause;
        /* 0x12D4 */ public float AerialViewStartTime;
        /* 0x12D8 */ public float AerialViewBackTime;
        /* 0x12DC */ public float AerialViewBlendTime;
        /* 0x12E0 */ public TkCurveType AerialViewCurve;
        /* 0x12E4 */ public GcCameraAerialViewData BeaconTransition;
        /* 0x1314 */ public GcCameraAerialViewData SignalTransition;
        /* 0x1344 */ public GcCameraAerialViewData WaypointTransition;
        /* 0x1374 */ public GcCameraAerialViewData RadioTowerTransition;
        /* 0x13A4 */ public float ScreenshotHorizonHeight;
        /* 0x13A8 */ public float ScreenshotHorizonFaceFactor;
        /* 0x13AC */ public float ScreenshotBendDownAmount;
        /* 0x13B0 */ public float ScreenshotRightDistance;
        /* 0x13B4 */ public float ScreenshotBackDistance;
        /* 0x13B8 */ public float ScreenshotInTime;
        /* 0x13BC */ public float ScreenshotOutTime;
        /* 0x13C0 */ public float ShipCamSpringStrengthMin;
        /* 0x13C4 */ public float ShipCamSpringStrengthMax;
        /* 0x13C8 */ public float ShipCamTurn;
        /* 0x13CC */ public float ShipCamPitch;
        /* 0x13D0 */ public float ShipCamPitchMod;
        /* 0x13D4 */ public float ShipCamLookInterp;
        /* 0x13D8 */ public float ShipCamMinReturnTime;
        /* 0x13DC */ public float ShipCamReturnTime;
        /* 0x13E0 */ public float ShipCamMotionTurn;
        /* 0x13E4 */ public float ShipCamMotionPitch;
        /* 0x13E8 */ public float ShipCamMotionPitchMod;
        /* 0x13EC */ public float ShipCamMotionMaxLagTurnAngle;
        /* 0x13F0 */ public float ShipCamMotionMaxLagPitchAngle;
        /* 0x13F4 */ public float ShipCamMotionInterp;
        /* 0x13F8 */ public float ShipCamRollAmountMin;
        /* 0x13FC */ public float ShipCamRollAmountMax;
        /* 0x1400 */ public float ShipCamRollSpeedScaler;
        /* 0x1404 */ public float ShipCamAimFOV;
        /* 0x1408 */ public float MouseSensitivity;
        /* 0x140C */ public float ModelViewRotateSpeed;
        /* 0x1410 */ public float ModelViewMouseRotateSpeed;
        /* 0x1414 */ public float ModelViewMouseRotateSnapStrength;
        /* 0x1418 */ public float ModelViewMouseMoveSpeed;
        /* 0x141C */ public float ModelViewDistSpeed;
        /* 0x1420 */ public float ModelViewMinDist;
        /* 0x1424 */ public float ModelViewMaxDist;
        /* 0x1428 */ public float ModelViewDefaultPitch;
        /* 0x142C */ public float ModelViewDefaultYaw;
        /* 0x1430 */ public bool DebugMoveCam;
        [NMS(Size = 0x3, Ignore = true)]
        /* 0x1431 */ public byte[] Padding1431;
        /* 0x1434 */ public float DebugMoveCamSpeed;
        /* 0x1438 */ public float DebugMoveCamHeight;
        /* 0x143C */ public bool DebugAICam;
        [NMS(Size = 0x3, Ignore = true)]
        /* 0x143D */ public byte[] Padding143D;
        /* 0x1440 */ public float DebugAICamUp;
        /* 0x1444 */ public float DebugAICamAt;
        /* 0x1448 */ public float PainShakeTime;
        /* 0x144C */ public float ShipShakeDamper;
        /* 0x1450 */ public float IndoorCamShakeDamper;
        /* 0x1454 */ public float FirstPersonSlerpAway;
        /* 0x1458 */ public float FirstPersonSlerpTowards;
        [NMS(Size = 0x4, Ignore = true)]
        /* 0x145C */ public byte[] Padding145C;
        [NMS(Size = 0x20)]
        /* 0x1460 */ public GcCameraShakeData[] CameraShakeTable;
        /* 0x2C60 */ public float BobAmount;
        /* 0x2C64 */ public float BobFactor;
        /* 0x2C68 */ public float BobFocus;
        /* 0x2C6C */ public float BobRollFactor;
        /* 0x2C70 */ public float BobRollAmount;
        /* 0x2C74 */ public float BobRollOffset;
        /* 0x2C78 */ public float BobFwdAmount;
        /* 0x2C7C */ public float CamSeed1;
        /* 0x2C80 */ public float CamSeed2;
        /* 0x2C84 */ public float CamWander1Phase;
        /* 0x2C88 */ public float CamWander2Phase;
        /* 0x2C8C */ public float CamWander1Amplitude;
        /* 0x2C90 */ public float CamWander2Amplitude;
        /* 0x2C94 */ public float DebugSpaceStationTeleportOffset;
        /* 0x2C98 */ public float DebugCameraSlowFactor;
        /* 0x2C9C */ public float DebugCameraFastFactor;
        /* 0x2CA0 */ public float DebugCameraSpaceFastFactor;
        /* 0x2CA4 */ public float OffsetCamFOV;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x2CA8 */ public byte[] Padding2CA8;
        /* 0x2CB0 */ public Vector4f OffsetCamOffset;
        /* 0x2CC0 */ public Vector4f OffsetCamRotation;
        /* 0x2CD0 */ public float ObjectFocusTime;
        /* 0x2CD4 */ public float CharCamFocusHeight;
        /* 0x2CD8 */ public float CharCamMaxDistance;
        /* 0x2CDC */ public float CharCamMinDistance;
        /* 0x2CE0 */ public float CharCamHeight;
        /* 0x2CE4 */ public float CharCamOffsetTime;
        /* 0x2CE8 */ public float CharCamAutoDirStartTime;
        /* 0x2CEC */ public float CharCamLookOffset;
        /* 0x2CF0 */ public float CharCamLookOffsetFactor;
        /* 0x2CF4 */ public float CharCamDeflectSpeed;
        /* 0x2CF8 */ public float CharCamMinSpeed;
        /* 0x2CFC */ public float CharCamRightStickX;
        /* 0x2D00 */ public float CharCamRightStickY;
        /* 0x2D04 */ public float FirstPersonCamHeight;
        /* 0x2D08 */ public float FirstPersonFoV;
        /* 0x2D0C */ public float ThirdPersonFoV;
        /* 0x2D10 */ public float FirstPersonZoom1FoV;
        /* 0x2D14 */ public float FirstPersonZoom2FoV;
        /* 0x2D18 */ public float ShipFoVMin;
        /* 0x2D1C */ public float ShipFoVMin2;
        /* 0x2D20 */ public float ShipFoVMax;
        /* 0x2D24 */ public float ShipWarpFoV;
        /* 0x2D28 */ public float ShipFoVMin3rdPerson;
        /* 0x2D2C */ public float ShipFoVMax3rdPerson;
        /* 0x2D30 */ public float ShipFoVBoost;
        /* 0x2D34 */ public float ShipFoVMiniJump;
        /* 0x2D38 */ public float ShipFoVSpring;
        /* 0x2D3C */ public float ShipMiniJumpFoVSpring;
        /* 0x2D40 */ public float FoVSpring;
        /* 0x2D44 */ public float FoVAdjust;
        /* 0x2D48 */ public bool FollowDrawCamProbes;
        [NMS(Size = 0x3, Ignore = true)]
        /* 0x2D49 */ public byte[] Padding2D49;
        /* 0x2D4C */ public GcCameraAnimationData CameraAnimations;
        /* 0x2DD0 */ public GcCameraAnimationData AmbientDroneAnimations;
        [NMS(Size = 0x80)]
        /* 0x2E54 */ public string CameraAmbientAnimationsData;
        /* 0x2ED4 */ public float CameraAmbientAutoSwitchMinTime;
        /* 0x2ED8 */ public float CameraAmbientAutoSwitchMaxTime;
        [NMS(Size = 0x4, Ignore = true)]
        /* 0x2EDC */ public byte[] Padding2EDC;
        /* 0x2EE0 */ public TkModelRendererData CameraNPCShipInteraction;
        /* 0x2F90 */ public TkModelRendererData CameraNPCShopInteraction;
        [NMS(Size = 0x4)]
        /* 0x3040 */ public Vector4f[] SavedCameraPositions;
        [NMS(Size = 0x40, Ignore = true)]
        /* 0x3080 */ public byte[] Padding3080;
        [NMS(Size = 0x4)]
        /* 0x30C0 */ public Vector4f[] SavedCameraFacing;
        /* 0x3100 */ public GcCameraWarpSettings WarpSettings;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x3154 */ public byte[] EndPadding;
    }
}
