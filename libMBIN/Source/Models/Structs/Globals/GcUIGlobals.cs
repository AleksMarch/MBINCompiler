namespace libMBIN.Models.Structs
{
    public class GcUIGlobals : NMSTemplate
    {
        /* 0x0 */ public bool LoadPagesFromMetadataCache;
        /* 0x1 */ public bool AlwaysCloseQuickMenu;
        /* 0x2 */ public bool UseWorldNodesForRepair;
        /* 0x3 */ public bool RepairTechUseTechIcon;
        /* 0x4 */ public bool DebugMissionLogText;
        /* 0x5 */ public bool DebugShowMaintenanceScreenCentre;
        /* 0x6 */ public bool DebugPopupSizes;
        /* 0x7 */ public bool FixedInventoryIconPositions;
        [NMS(Size = 0x3)]
        /* 0x8 */ public Vector2f[] InventoryIconPositions;
        /* 0x20 */ public Colour PickedItemBorderColour;
        /* 0x30 */ public Colour MultiplayerMissionParticipantsColour;
        [NMS(Size = 0x10)]
        /* 0x40 */ public string MultiplayerMissionInteractStartTrigger;
        [NMS(Size = 0x10)]
        /* 0x50 */ public string MultiplayerMissionInteractEndTrigger;
        /* 0x60 */ public float DroneIndicatorRadius;
        /* 0x64 */ public float DroneIndicatorCentreRadiusMax;
        /* 0x68 */ public float DroneIndicatorCentreRadiusMin;
        /* 0x6C */ public float DroneIndicatorFadeRange;
        /* 0x70 */ public float WantedDetectMessageTime;
        /* 0x74 */ public float WantedDetectMinTimeout;
        /* 0x78 */ public float TakeoffFuelMessageTime;
        /* 0x7C */ public float MarkerHorizonOffsetAngle;
        /* 0x80 */ public float MarkerHorizonMinOffset;
        /* 0x84 */ public float MarkerHorizonApproachAngle;
        /* 0x88 */ public float MarkerOffsetTypeAngle;
        /* 0x8C */ public float MarkerOffsetTypeAngleBattle;
        /* 0x90 */ public float MarkerOffsetTypeAngleBounty;
        /* 0x94 */ public float MarkerHorizonOffPlanetLightBeamAngle;
        /* 0x98 */ public float MarkerHorizonShipApproachOffset;
        /* 0x9C */ public float TransferPopupCursorOffsetFactor;
        /* 0xA0 */ public float ScannableIconMergeAngle;
        /* 0xA4 */ public float MissionObjectiveBaseHeight;
        /* 0xA8 */ public Vector2f CompassCentre;
        /* 0xB0 */ public float CompassHeight;
        /* 0xB4 */ public float CompassWidth;
        /* 0xB8 */ public float CompassDistanceScaleMin;
        /* 0xBC */ public float CompassDistanceScaleRange;
        /* 0xC0 */ public float CompassDistanceScale;
        /* 0xC4 */ public float CompassDistanceMaxAngle;
        /* 0xC8 */ public float CompassDistanceYOffset;
        /* 0xCC */ public float CompassAngleClamp;
        /* 0xD0 */ public float CompassAngleFade;
        /* 0xD4 */ public TkCurveType CompassCurve;
        /* 0xD8 */ public float BaseComplexityDangerFactor;
        /* 0xDC */ public float BaseComplexityWarningFactor;
        /* 0xE0 */ public Colour BaseComplexityDefaultColour;
        /* 0xF0 */ public Colour BaseComplexityWarningColour;
        /* 0x100 */ public Colour BaseComplexityDangerColour;
        /* 0x110 */ public float MarkerRingInnerRadius;
        /* 0x114 */ public float MarkerRingOuterRadius;
        /* 0x120 */ public Colour MarkerRingBGColour;
        /* 0x130 */ public float RepairTechRepairedWaitTime1;
        /* 0x134 */ public float RepairTechRepairedWaitTime2;
        /* 0x138 */ public float RepairTechRepairedMessageTime;
        /* 0x13C */ public float TechPopupRepairLayerHeight;
        /* 0x140 */ public float TechPopupBuildLayerHeight;
        /* 0x144 */ public float TechPopupRequirementHeight;
        /* 0x148 */ public float DamageTrackArrowTime;
        /* 0x14C */ public float HUDMarkerObjectMinScreenDistance;
        /* 0x150 */ public float HUDMarkerDistanceOrTimeDistance;
        /* 0x154 */ public float MarkerComponentOffset;
        /* 0x158 */ public float RepairTechLabelOffset;
        /* 0x15C */ public float MaintenanceIconFadeStart;
        /* 0x160 */ public float MaintenanceIconFadeTime;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x164 */ public byte[] Padding164;
        /* 0x170 */ public TkModelRendererData RepairCamera;
        /* 0x220 */ public TkModelRendererData RepairWeaponCamera;
        /* 0x2D0 */ public TkModelRendererData RepairBackpackCamera;
        /* 0x380 */ public TkModelRendererData RepairShipCamera;
        /* 0x430 */ public Vector2f BinocularsDiscoveryPos;
        /* 0x440 */ public Colour InteractionLabelCostColour;
        /* 0x450 */ public Colour InteractionLabelPickupColour;
        /* 0x460 */ public Colour InteractionLabelPickupFillColour;
        /* 0x470 */ public float RefinerPadStartTime;
        /* 0x474 */ public float RefinerPadStartDecayTime;
        /* 0x478 */ public float RefinerBeginDialInnerRadius;
        /* 0x47C */ public float RefinerProgressDialInnerRadius;
        /* 0x480 */ public Vector4f DefaultRefinerOffsetIn;
        /* 0x490 */ public Vector4f DefaultRefinerOffsetOut;
        /* 0x4A0 */ public Vector2f RefinerParallax;
        /* 0x4A8 */ public Vector2f ModelViewWorldParallax;
        /* 0x4B0 */ public Vector2f HUDPlayerSentinelPulseFreq;
        /* 0x4B8 */ public Vector2f HUDPlayerSentinelPulseSize;
        /* 0x4C0 */ public float HUDPlayerSentinelPulseWidth;
        /* 0x4C4 */ public float HUDPlayerSentinelRangeFactor;
        /* 0x4C8 */ public float HUDPlayerSentinelPulseScanFreq;
        /* 0x4CC */ public float HUDPlayerPhonePulseScanFreq;
        /* 0x4D0 */ public float RefinerAutoCloseTime;
        /* 0x4E0 */ public Colour RefinerBackgroundColour;
        /* 0x4F0 */ public Colour RefinerErrorBackgroundColour;
        /* 0x500 */ public Colour TransferSendPopupColour;
        /* 0x510 */ public float BountyMarkerOffset;
        /* 0x514 */ public float TransitionOffset;
        /* 0x518 */ public float PageTurnTime;
        /* 0x51C */ public TkCurveType PageTurnCurve;
        /* 0x520 */ public TkCurveType PageTurnFadeCurve;
        /* 0x524 */ public float LowHealthShieldMin;
        /* 0x528 */ public float LowHealthShieldFactor;
        /* 0x52C */ public int MaxDialogCharSizeRoman;
        [NMS(Size = 0x20)]
        /* 0x530 */ public string MaxDialogCharSizeRomanString;
        /* 0x550 */ public int MaxDialogCharSizeIdeographic;
        [NMS(Size = 0x20)]
        /* 0x554 */ public string MaxDialogCharSizeIdeographicString;
        /* 0x574 */ public float ShipOverheatSwitchMessageWait;
        /* 0x578 */ public float ShipOverheatSwitchMessageTime;
        /* 0x57C */ public bool LeadTargetEnabled;
        [NMS(Size = 0x3, Ignore = true)]
        /* 0x57D */ public byte[] Padding57D;
        /* 0x580 */ public Vector2f SaveIconPosition;
        /* 0x588 */ public float MissionStartEndTime;
        /* 0x58C */ public float MissionStartEndOSDTime;
        /* 0x590 */ public float MissionStartEndOSDTimeProcedural;
        /* 0x594 */ public float StandingRewardOSDTime;
        /* 0x5A0 */ public Colour MissionOSDMessageBarColour;
        /* 0x5B0 */ public Colour NotificationDefaultColour;
        /* 0x5C0 */ public Colour NotificationDangerColour;
        /* 0x5D0 */ public Colour NotificationInfoColour;
        /* 0x5E0 */ public Colour NotificationUrgentColour;
        /* 0x5F0 */ public float ShipDamageDirectionIndicatorRadius;
        /* 0x5F4 */ public float ShipDamageDirectionIndicatorFadeRange;
        /* 0x5F8 */ public float OnFootDamageDirectionIndicatorRadius;
        /* 0x5FC */ public float OnFootDamageDirectionIndicatorFadeRange;
        /* 0x600 */ public float DamageDirectionIndicatorOnScreenRadiusMultiplier;
        /* 0x604 */ public Vector2f DialogPageCursorOffset;
        /* 0x60C */ public int MissionSpecificMissionPercent;
        /* 0x610 */ public int MissionLoopCount;
        /* 0x614 */ public int MissionSeedOffset;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x618 */ public byte[] Padding618;
        /* 0x620 */ public Vector4f SpaceMapCockpitOffset;
        /* 0x630 */ public float SpaceMapCockpitScale;
        /* 0x634 */ public float SpaceMapCockpitAngle;
        /* 0x638 */ public float TargetDisplayScale;
        /* 0x63C */ public float TargetDisplayShipScale;
        [NMS(Size = 0x10)]
        /* 0x640 */ public string TargetDisplayShipOffset;
        /* 0x650 */ public float TargetDisplayDamageFlashTime;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x654 */ public byte[] Padding654;
        /* 0x660 */ public GcScanEffectData TargetDisplayScanEffect;
        /* 0x6B0 */ public bool ProgressiveDialogStyle;
        /* 0x6B4 */ public float CommunicatorMessageTime;
        /* 0x6C0 */ public Colour CommunicatorMessageColour;
        /* 0x6D0 */ public float GridFlickerBaseAlpha;
        /* 0x6D4 */ public float GridFlickerFreq;
        /* 0x6D8 */ public float GridFlickerAmp;
        /* 0x6DC */ public float HUDMarkerLabelWidthMultiplier;
        /* 0x6E0 */ public float HUDMarkerLabelBaseWidth;
        /* 0x6E4 */ public float HUDMarkerLabelArriveDistance;
        /* 0x6E8 */ public float HUDMarkerLabelDisplayDistance;
        /* 0x6EC */ public float HUDMarkerNonActiveMissionAlpha;
        /* 0x6F0 */ public bool DebugMarkerLabels;
        [NMS(Size = 0xF, Ignore = true)]
        /* 0x6F1 */ public byte[] Padding6F1;
        /* 0x700 */ public GcScanEffectData DebugEditorPreviewEffect;
        /* 0x750 */ public bool ShowDamageNumbers;
        /* 0x754 */ public float QuickMenuCloseTime;
        /* 0x758 */ public float QuickMenuErrorTime;
        /* 0x75C */ public float FrontendWaitResponse;
        /* 0x760 */ public float FrontendWaitInitial;
        /* 0x764 */ public float FrontendWaitInitialTerminal;
        /* 0x768 */ public float FrontendWaitFadeTextOut;
        /* 0x76C */ public float FrontendWaitFadeTextFrameOut;
        /* 0x770 */ public float FrontendWaitFadeProgressiveDialogOut;
        /* 0x774 */ public float FrontendWaitResponseOffset;
        /* 0x778 */ public float TalkBoxAlienTextSpeed;
        /* 0x77C */ public float TalkBoxAlienTextTimeMin;
        /* 0x780 */ public float TalkBoxAlienTextTimeMax;
        /* 0x784 */ public float DescriptionTextDelay;
        /* 0x788 */ public float DescriptionTextSpeed;
        /* 0x78C */ public float DescriptionTextSpeedProgressive;
        /* 0x790 */ public float DescriptionTextTimeMin;
        /* 0x794 */ public float DescriptionTextTimeMax;
        /* 0x798 */ public float ConsoleTextSpeed;
        /* 0x79C */ public float ConsoleTextTimeMin;
        /* 0x7A0 */ public float ConsoleTextTimeMax;
        /* 0x7A4 */ public float HoverOffscreenBorder;
        /* 0x7A8 */ public float TimedEventLookTime;
        /* 0x7AC */ public float DamageImpactMergeTime;
        /* 0x7B0 */ public float DamageImpactTimeBetweenNumbers;
        /* 0x7B4 */ public float DamageImpactMinDistance;
        /* 0x7B8 */ public float DamagePerSecondSampleTime;
        /* 0x7BC */ public float DamageNumberTime;
        /* 0x7C0 */ public float DamageNumberSizeInShip;
        /* 0x7C4 */ public float DamageNumberSize;
        /* 0x7C8 */ public float DamageNumberSizeCritMultiplier;
        /* 0x7CC */ public float DamageNumberBlackAlpha;
        /* 0x7D0 */ public float DamageNumberOutline;
        /* 0x7D4 */ public float DamageNumberOutline2;
        /* 0x7D8 */ public float DamageNumberOffsetX;
        /* 0x7DC */ public float DamageNumberOffsetY;
        /* 0x7E0 */ public Vector2f DamageNumberSideSpeed;
        /* 0x7E8 */ public float DamageNumberFadeIn;
        /* 0x7EC */ public float DamageNumberFadeOut;
        /* 0x7F0 */ public float DamageNumberUpOffset;
        /* 0x7F4 */ public TkCurveType DamageNumberUpCurve;
        /* 0x800 */ public Colour DamageNumberCriticalColour;
        /* 0x810 */ public Colour DamageNumberIneffectiveColour;
        /* 0x820 */ public Colour PhotoModeSelectedColour;
        /* 0x830 */ public Colour PhotoModeUnselectedColour;
        /* 0x840 */ public Colour FuelBgColour;
        /* 0x850 */ public float PhotoModeValueAlpha;
        /* 0x854 */ public float PhotoModeTimeofDayChange;
        /* 0x858 */ public float FrigateIconOffset;
        /* 0x85C */ public float DelayBeforeHidingHangarAfterGalaxyMap;
        /* 0x860 */ public float DelayBeforeShowingHangarIntoGalaxyMap;
        /* 0x864 */ public float FreighterSummonTurn;
        /* 0x868 */ public float FreighterSummonPitch;
        /* 0x86C */ public float FreighterSummonOffset;
        /* 0x870 */ public float FreighterSummonDelay;
        /* 0x874 */ public int FreighterSummonTurnNumTries;
        /* 0x878 */ public float FreighterSummonTurnAngleIncrement;
        /* 0x87C */ public float FreighterSummonGridSize;
        /* 0x880 */ public float FreighterCommanderMarkerMinDistance;
        /* 0x884 */ public float FreighterBaseIconOffset;
        /* 0x888 */ public float FreighterSurfaceMinAngle;
        /* 0x88C */ public float FreighterSummonPulseRate;
        /* 0x890 */ public float FreighterSummonPulseFadeAmount;
        /* 0x894 */ public float FreighterSummonPlanetOffset;
        /* 0x898 */ public float FreighterSummonLookTime;
        /* 0x89C */ public float FreighterHighlightRange;
        /* 0x8A0 */ public GcScanEffectData FreighterSummonScanEffect;
        /* 0x8F0 */ public Colour FreighterSummonScanEffectColourBlocked;
        /* 0x900 */ public Colour FreighterSummonScanEffectColourHighlight;
        /* 0x910 */ public float PirateCountdownTime;
        /* 0x914 */ public float PirateAttackIndicatorWidth;
        /* 0x918 */ public float PirateAttackIndicatorRadius;
        /* 0x91C */ public float PirateAttackProbeDisplayFinishFactor;
        /* 0x920 */ public float HazardArrowsLevel2Threshold;
        /* 0x924 */ public float HazardArrowsLevel3Threshold;
        /* 0x928 */ public float ArrowBounceLength;
        /* 0x92C */ public float ArrowBounceRate;
        /* 0x930 */ public float ArrowBounceRightRate1;
        /* 0x934 */ public float ArrowBounceRightRate2;
        /* 0x938 */ public TkCurveType ArrowBounceRightCurve;
        /* 0x93C */ public float ArrowBounceLeftRate1;
        /* 0x940 */ public float ArrowBounceLeftRate2;
        /* 0x944 */ public float ArrowBounceLeftRate3;
        /* 0x948 */ public TkCurveType ArrowBounceLeftCurve;
        /* 0x94C */ public float PlanetScanDelayTime;
        /* 0x950 */ public float AlwaysShowIconFadeDistance;
        /* 0x954 */ public float AlwaysShowIconFadeRange;
        /* 0x958 */ public float FrigatePurchaseNotificationResetDistanceMultiplier;
        /* 0x95C */ public float FreighterLeaderIconDistance;
        /* 0x960 */ public float FreighterEntranceOffset;
        /* 0x964 */ public float ShipHeadsUpDisplayDistance;
        /* 0x968 */ public float ShipHeadsUpLineFadeTime;
        /* 0x96C */ public float CrosshairAimTime;
        /* 0x970 */ public float CrosshairAimOffTime;
        /* 0x974 */ public float CrosshairInnerMinFade;
        /* 0x978 */ public float CrosshairInnerMinFadeRange;
        /* 0x97C */ public float CrosshairLeadScaleIn;
        /* 0x980 */ public float CrosshairLeadInDelay;
        /* 0x984 */ public float CrosshairLeadInTime;
        /* 0x988 */ public float CrosshairLeadCornerOffset;
        /* 0x98C */ public float CrosshairLeadTopOffset;
        /* 0x990 */ public float CrosshairLeadTopLock;
        /* 0x994 */ public float CrosshairLeadPulseSize;
        /* 0x998 */ public TkCurveType CrosshairLeadScaleCurve;
        /* 0x99C */ public float CrosshairSpringTime;
        /* 0x9A0 */ public float CrosshairSpringAimTime;
        /* 0x9A4 */ public float CrosshairLeadSpring;
        /* 0x9A8 */ public float CrosshairLeadSpringOff;
        /* 0x9AC */ public float CrosshairLeadFadeRange;
        /* 0x9B0 */ public float CrosshairLeadFadeSize;
        /* 0x9C0 */ public Colour CrosshairLeadThreatColour;
        /* 0x9D0 */ public Colour CrosshairLeadPassiveColour;
        /* 0x9E0 */ public float CrosshairInterceptSize;
        /* 0x9E4 */ public float CrosshairInterceptBaseSize;
        /* 0x9E8 */ public float CrosshairInterceptCentreBaseSize;
        /* 0x9EC */ public float CrosshairInterceptSpringTime;
        /* 0x9F0 */ public float CrosshairInterceptAlpha;
        /* 0x9F4 */ public float CrosshairInterceptLockRange;
        /* 0x9F8 */ public float CrosshairTargetLockSize;
        /* 0x9FC */ public TkCurveType CrosshairTargetLockCurve;
        /* 0xA00 */ public TkCurveType CrosshairTargetLockAlphaCurve;
        /* 0xA10 */ public Colour CrosshairColour;
        /* 0xA20 */ public TkHitCurveData CrosshairLeadHitCurve;
        /* 0xA30 */ public TkHitCurveData ShootableHitCurve;
        /* 0xA40 */ public int ControlScrollSteps;
        /* 0xA44 */ public float ControlScrollDistance;
        /* 0xA50 */ public Colour SelectedControlColour;
        /* 0xA60 */ public Colour RemappedControlColour;
        /* 0xA70 */ public float CreatureRoutineMarkerTime;
        /* 0xA74 */ public int CreatureRoutineRegionsPerFrame;
        /* 0xA78 */ public float SpaceMarkersOffset;
        /* 0xA7C */ public float SpaceMarkersBattleOffset;
        /* 0xA80 */ public float LargeSpaceIconSize;
        /* 0xA84 */ public float SmallSpaceIconSize;
        /* 0xA88 */ public Vector2f TrackTypeIconOffset;
        /* 0xA90 */ public float TrackTypeIconSize;
        /* 0xA94 */ public float TrackPrimaryCentreOffset;
        /* 0xA98 */ public float TrackTimerAlpha;
        /* 0xA9C */ public float TrackTimerRadarPulseSize;
        /* 0xAA0 */ public float TrackTimerIconOuterRadius;
        /* 0xAA4 */ public float TrackTimerIconInnerRadius;
        /* 0xAA8 */ public float TrackTimerIconExclaimRadius;
        /* 0xAAC */ public float TrackGlowBase;
        /* 0xAB0 */ public float TrackHitPulseTime;
        /* 0xAB4 */ public float TrackGlowCritical;
        /* 0xAB8 */ public float TrackGlowHit;
        /* 0xABC */ public float MissileCentreOffset;
        /* 0xAC0 */ public float TrackMissileTargetPulseRate;
        /* 0xAC4 */ public float TrackScaleCritical;
        /* 0xAC8 */ public float TrackScaleHit;
        /* 0xACC */ public float TrackLeadTargetInScale;
        /* 0xAD0 */ public float TrackReticuleScale;
        /* 0xAD4 */ public float TrackReticuleAngle;
        /* 0xAD8 */ public float TrackReticuleInTime;
        /* 0xADC */ public float TrackReticuleInactiveTime;
        /* 0xAE0 */ public float TrackReticuleRandomTime;
        /* 0xAE4 */ public float TrackReticuleRandomDelay;
        /* 0xAE8 */ public TkCurveType TrackReticuleInCurve;
        /* 0xAEC */ public TkCurveType TrackReticuleInAngleCurve;
        /* 0xAF0 */ public float CreatureReticuleScale;
        /* 0xAF4 */ public TkCurveType CreatureReticuleScaleCurve;
        /* 0xAF8 */ public TkCurveType CreatureReticuleAlphaCurve;
        /* 0xAFC */ public float HUDPlayerTrackNoSightPulse;
        /* 0xB00 */ public float HUDPlayerTrackTimerStart;
        /* 0xB04 */ public float HUDPlayerTrackTimerStartFade;
        /* 0xB08 */ public float HUDPlayerTrackTimerEnd;
        /* 0xB0C */ public float HUDPlayerTrackTimerPulseRate;
        /* 0xB10 */ public float TrackCritCurve;
        /* 0xB14 */ public Vector2f TrackCriticalHitOffset;
        /* 0xB1C */ public float TrackCriticalHitSize;
        /* 0xB20 */ public float TrackCriticalPulseTime;
        /* 0xB24 */ public float ThirdPersonCrosshairDistance;
        /* 0xB28 */ public float ThirdPersonCrosshairCircle1Distance;
        /* 0xB2C */ public float ThirdPersonCrosshairCircle2Distance;
        /* 0xB30 */ public float HUDPlayerTrackArrowShipLabelOffset;
        /* 0xB34 */ public float HUDPlayerTrackArrowIconPulseTime;
        /* 0xB38 */ public float HUDPlayerTrackArrowIconShowTime;
        /* 0xB3C */ public float HUDPlayerTrackArrowIconFadeTime;
        /* 0xB40 */ public Vector2f HUDPlayerTrackArrowIconPulseSize;
        /* 0xB48 */ public float HUDPlayerTrackArrowIconPulseWidth1;
        /* 0xB4C */ public float HUDPlayerTrackArrowIconPulseWidth2;
        /* 0xB50 */ public float HUDPlayerTrackArrowIconPulse2Alpha;
        /* 0xB54 */ public float HUDPlayerTrackArrowIconFadeDist;
        /* 0xB58 */ public float HUDPlayerTrackArrowIconFadeRange;
        /* 0xB5C */ public float HUDPlayerTrackArrowPulseOffset;
        /* 0xB60 */ public float HUDPlayerTrackArrowPulseRate;
        /* 0xB64 */ public Vector2f HUDPlayerTrackIconOffset;
        /* 0xB6C */ public float ShipFullscreenDamper;
        /* 0xB70 */ public float ShipDesatDamper;
        /* 0xB74 */ public float ScanEventArrowShipFadeRange;
        /* 0xB78 */ public float ScanEventArrowShipFadeDistance;
        /* 0xB7C */ public float ScanEventArrowPlayerFadeRange;
        /* 0xB80 */ public float ScanEventArrowPlayerFadeDistance;
        /* 0xB84 */ public float ScanEventArrowOffsetMultiplier;
        /* 0xB88 */ public float ScanEventArrowOffsetMultiplierOneEvent;
        /* 0xB8C */ public float ScanEventArrowSecondaryAlpha;
        /* 0xB90 */ public float ScanEventIconAudio;
        /* 0xB94 */ public TkNGuiRectanglePulseEffect PulseBarData;
        /* 0xBA8 */ public TkNGuiRectanglePulseEffect PulseIconData;
        /* 0xBC0 */ public Colour PulseDamageColour;
        /* 0xBD0 */ public Colour PulseAlertColour;
        /* 0xBE0 */ public float TechDisplayDelayTime;
        /* 0xBE4 */ public float CriticalMessageTime;
        /* 0xBE8 */ public int NumDeathQuotes;
        /* 0xBEC */ public bool EnableKanaConversion;
        /* 0xBF0 */ public float HUDDisplayTime;
        /* 0xBF4 */ public float HUDPlayerTrackDangerPulse;
        /* 0xBF8 */ public float HUDPlayerTrackArrowTextOffset;
        /* 0xBFC */ public float HUDPlayerTrackArrowTextHeight;
        /* 0xC00 */ public Colour HUDPlayerTrackArrowTextColour;
        /* 0xC10 */ public float HUDPlayerTrackArrowHealthOffset;
        /* 0xC14 */ public Vector2f HUDPlayerTrackArrowHealthSize;
        /* 0xC1C */ public float HUDPlayerTrackArrowHealthGlowOffset;
        /* 0xC20 */ public Vector2f HUDPlayerTrackArrowHealthGlowSize;
        /* 0xC28 */ public float HUDPlayerTrackArrowTargetDist;
        /* 0xC2C */ public float HUDPlayerTrackArrowOffset;
        /* 0xC30 */ public float HUDPlayerTrackArrowScreenBorder;
        /* 0xC34 */ public float HUDPlayerTrackArrowSize;
        /* 0xC38 */ public float HUDPlayerTrackArrowSizeMin;
        /* 0xC3C */ public float HUDPlayerTrackArrowSizeMax;
        /* 0xC40 */ public float HUDPlayerTrackArrowIconSize;
        /* 0xC44 */ public float HUDPlayerTrackArrowArrowSize;
        /* 0xC48 */ public float HUDPlayerTrackArrowDotSize;
        /* 0xC50 */ public Colour HUDPlayerTrackArrowDotColour;
        /* 0xC60 */ public Colour HUDPlayerTrackArrowDotColourPolice;
        /* 0xC70 */ public Colour HUDPlayerTrackArrowDotColourPirate;
        /* 0xC80 */ public Colour HUDWarningColour;
        /* 0xC90 */ public Colour HUDNotifyColour;
        /* 0xCA0 */ public float HUDPlayerTrackArrowMinFadeDist;
        /* 0xCA4 */ public float HUDPlayerTrackArrowFadeRange;
        /* 0xCA8 */ public float IconBackgroundAlpha;
        /* 0xCAC */ public float WantedLevelWitnessPulseRate;
        /* 0xCB0 */ public float WantedLevelWitnessOffset;
        /* 0xCB4 */ public float WantedLevelTimeoutPulseRate;
        /* 0xCB8 */ public float WantedLevelWitnessAlpha;
        /* 0xCBC */ public float WantedLevelScanAlpha;
        /* 0xCC0 */ public float WantedLevelScannedRate;
        [NMS(Size = 0x37)]
        /* 0xCC4 */ public NMSString0x80[] StatIcons;
        /* 0x2844 */ public bool ShowJetpackNotificationForNonTerrain;
        /* 0x2848 */ public float StatsMessageDelayTime;
        /* 0x284C */ public int NotificationsResourceExtractHintCount;
        /* 0x2850 */ public float NotificationStaminaHintDistanceWalked;
        /* 0x2854 */ public float NotificationMinVisibleTime;
        /* 0x2858 */ public float NotificationHazardSafeThreshold;
        /* 0x285C */ public float NotificationHazardTimer;
        /* 0x2860 */ public float NotificationInteractHintStartTime;
        /* 0x2864 */ public float NotificationBuildHintStartTime;
        /* 0x2868 */ public float NotificationJetpackTime;
        /* 0x286C */ public float NotificationShieldTime;
        /* 0x2870 */ public float NotificationShipBoostTime;
        /* 0x2874 */ public float NotificationCantFireTime;
        /* 0x2878 */ public float NotificationDangerTime;
        /* 0x287C */ public float NotificationScanTime;
        /* 0x2880 */ public float NotificationScanTimeCutoff;
        /* 0x2884 */ public float NotificationMessageCycleTime;
        /* 0x2888 */ public float NotificationMaxPageHintTime;
        /* 0x288C */ public float NotificationShipJumpMinTime;
        /* 0x2890 */ public float NotificationShipJumpReminderTime;
        /* 0x2894 */ public float NotificationShipJumpReminderTutorial;
        /* 0x2898 */ public float NotificationShipBoostMinTime;
        /* 0x289C */ public float NotificationShipBoostReminderTime;
        /* 0x28A0 */ public float NotificationShipBoostReminderTimeTutorial;
        /* 0x28A4 */ public float LandNotifySpeedThreshold;
        /* 0x28A8 */ public float LandNotifyHeightThreshold;
        /* 0x28AC */ public float NotificationTimeBeforeHeridiumMarker;
        /* 0x28B0 */ public float NotificationUrgentMessageTime;
        /* 0x28B4 */ public float NotificationGoToSpaceStationWait;
        /* 0x28B8 */ public float NotificationMonolithMissionWait;
        /* 0x28BC */ public float NotificationFinalMissionWait;
        /* 0x28C0 */ public float NotificationWaypointReachDistance;
        /* 0x28C4 */ public float NotificationBridgeReachDistance;
        /* 0x28C8 */ public float NotificationDiscoveryIdleTime;
        /* 0x28CC */ public float NotificationInfoIdleTime;
        /* 0x28D0 */ public float NotificationNewTechIdleTime;
        /* 0x28D4 */ public float NotificationScanEventMissionIdleTime;
        /* 0x28D8 */ public float NotificationDeviceIdleTime;
        /* 0x28DC */ public float NotificationMissionHintTime;
        /* 0x28E0 */ public float NotificationMissionHintTimeCritical;
        /* 0x28E4 */ public float NotificationMissionHintTimeSecondary;
        /* 0x28E8 */ public Vector2f NotificationMissionHintPauseTime;
        /* 0x28F0 */ public Vector2f NotificationMissionHintPauseTimeCritical;
        /* 0x28F8 */ public Vector2f NotificationMissionHintPauseTimeSecondary;
        /* 0x2900 */ public float TooltipTime;
        /* 0x2904 */ public float InventoryIconTime;
        /* 0x2908 */ public float MessageNotificationTime;
        /* 0x290C */ public float MessageTimeQuick;
        /* 0x2910 */ public float DeathMessageSwitchTime;
        /* 0x2914 */ public float DeathMessageTotalTime;
        /* 0x2920 */ public Colour DeathMessageColour;
        /* 0x2930 */ public Colour PinnedRecipeBorder;
        [NMS(Size = 0x20)]
        /* 0x2940 */ public string DistanceUnitM;
        [NMS(Size = 0x20)]
        /* 0x2960 */ public string DistanceUnitKM;
        [NMS(Size = 0x20)]
        /* 0x2980 */ public string DistanceUnitMpS;
        /* 0x29A0 */ public float ZoomHUDElementsOffsetX;
        /* 0x29A4 */ public float ZoomHUDElementsOffsetY;
        /* 0x29A8 */ public float ZoomHUDElementTime;
        /* 0x29AC */ public Vector2f PlanetLabelOffset;
        /* 0x29B4 */ public Vector2f PlanetMeasureOffset;
        /* 0x29BC */ public Vector2f PlanetLineOffset;
        /* 0x29C4 */ public float PlanetLabelTime;
        /* 0x29C8 */ public float PlanetLabelAngle;
        /* 0x29D0 */ public Colour ItemSlotColourSubstance;
        /* 0x29E0 */ public Colour ItemSlotColourTech;
        /* 0x29F0 */ public Colour ItemSlotColourTechCharge;
        /* 0x2A00 */ public Colour ItemSlotColourTechDamage;
        /* 0x2A10 */ public float ItemSlotColourTechChargeRate;
        /* 0x2A20 */ public Colour ItemSlotColourProduct;
        /* 0x2A30 */ public Colour ItemSlotTextColourSubstance;
        /* 0x2A40 */ public Colour ItemSlotTextColourTech;
        /* 0x2A50 */ public Colour ItemSlotTextColourProduct;
        /* 0x2A60 */ public float InteractionScanScanTime;
        /* 0x2A64 */ public float InteractionScanMinTime;
        /* 0x2A68 */ public float InteractionScanDisplayTime;
        /* 0x2A6C */ public float InteractionScanSlapTime;
        /* 0x2A70 */ public float InteractionScanSlapScale;
        /* 0x2A74 */ public float InteractionScanSlapOverallTime;
        /* 0x2A78 */ public TkCurveType InteractionScanSlapCurve;
        /* 0x2A7C */ public float ShipHUDMissileLockSizeMin;
        /* 0x2A80 */ public float ShipHUDMissileLockSizeMax;
        /* 0x2A84 */ public float ShipHUDMissileLockSpringSlow;
        /* 0x2A88 */ public float ShipHUDMissileLockSpringFast;
        /* 0x2A8C */ public float ShipHUDMaxOffscreenTargetDist;
        /* 0x2A90 */ public float ShipHUDTargetRadius;
        /* 0x2A94 */ public float ShipHUDTargetTriangleRadius;
        /* 0x2A98 */ public float ShipHUDTargetAlpha;
        /* 0x2A9C */ public float ShipHUDTargetArrowLength;
        /* 0x2AA0 */ public float ShipHUDTargetMinDist;
        /* 0x2AA4 */ public float ShipHUDTargetRange;
        /* 0x2AA8 */ public float ShipHUDTargetScale;
        /* 0x2AAC */ public float ShipHUDTargetArrowsRotationRate;
        /* 0x2AB0 */ public Colour ShipHUDTargetArrowsColourOutOfRange;
        /* 0x2AC0 */ public Colour ShipHUDTargetArrowsColourThreat;
        /* 0x2AD0 */ public Colour ShipHUDTargetArrowsColourLocal;
        [NMS(Size = 0x4)]
        /* 0x2AE0 */ public Colour[] ShipHUDTargetArrowsColour;
        /* 0x2B20 */ public Colour ShipHUDAimTargetColour;
        /* 0x2B30 */ public Colour ShipHUDAimTargetCritColour;
        /* 0x2B40 */ public float ShipHUDHitPointTime;
        /* 0x2B44 */ public float ShipHUDHitPointSize;
        /* 0x2B48 */ public float TargetScreenFoV;
        /* 0x2B4C */ public float TargetScreenDistance;
        /* 0x2B50 */ public Vector2f TargetScreenCamOffset;
        /* 0x2B58 */ public float InventoryFullMessageRepeatTime;
        /* 0x2B5C */ public float HoldTimerResetTime;
        /* 0x2B60 */ public bool ModelRendererBGPass;
        /* 0x2B61 */ public bool ModelRendererPass1;
        /* 0x2B62 */ public bool ModelRendererPass2;
        [NMS(Size = 0x20)]
        /* 0x2B63 */ public string HUDTimeSunrise;
        [NMS(Size = 0x20)]
        /* 0x2B83 */ public string HUDTimeSunset;
        /* 0x2BA4 */ public float HeatSpringTime;
        /* 0x2BA8 */ public float HeatAlertTime;
        /* 0x2BAC */ public float HeatAlertFixedTime;
        /* 0x2BB0 */ public float HeatAlertSpringTime;
        /* 0x2BB4 */ public float HazardScreenEffectPulseRate;
        /* 0x2BB8 */ public float KeepHazardBarActiveTime;
        /* 0x2BBC */ public float KeepSecondHazardBarActiveTime;
        /* 0x2BC0 */ public float HazardBarPulseTime;
        /* 0x2BC4 */ public float HazardScreenEffectPulseTime;
        /* 0x2BC8 */ public float HazardScreenEffectStrength;
        /* 0x2BCC */ public float ShieldSpringTime;
        /* 0x2BD0 */ public float ShieldPulseTime;
        /* 0x2BD4 */ public float ShieldHazardPulseRate;
        /* 0x2BD8 */ public float ShieldHazardPulseThreshold;
        /* 0x2BDC */ public float AlwaysOnHazardThreshold;
        /* 0x2BE0 */ public float AlwaysOnHazardStrengthTox;
        /* 0x2BE4 */ public float AlwaysOnHazardStrengthHeat;
        /* 0x2BE8 */ public float AlwaysOnHazardStrengthRad;
        /* 0x2BEC */ public float AlwaysOnHazardStrengthCold;
        /* 0x2BF0 */ public float AlwaysOnHazardMultiplierTox;
        /* 0x2BF4 */ public float AlwaysOnHazardMultiplierHeat;
        /* 0x2BF8 */ public float AlwaysOnHazardMultiplierRad;
        /* 0x2BFC */ public float AlwaysOnHazardMultiplierCold;
        /* 0x2C00 */ public float HazardPulseRate;
        [NMS(Size = 0x6, EnumValue = new string[6] { "None", "NoOxygen", "ExtremeHeat", "ExtremeCold", "ToxicGas", "Radiation" })]
        /* 0x2C04 */ public NMSString0x80[] HazardTextures;
        [NMS(Size = 0x6, EnumValue = new string[6] { "None", "NoOxygen", "ExtremeHeat", "ExtremeCold", "ToxicGas", "Radiation" })]
        /* 0x2F04 */ public NMSString0x80[] HazardNormalMaps;
        [NMS(Size = 0x6, EnumValue = new string[6] { "None", "NoOxygen", "ExtremeHeat", "ExtremeCold", "ToxicGas", "Radiation" })]
        /* 0x3204 */ public NMSString0x80[] HazardHeightmaps;
        /* 0x3504 */ public float IconPulseRate;
        /* 0x3510 */ public Colour EnergyBgColour;
        /* 0x3520 */ public Colour EnergyBgPulseColour;
        /* 0x3530 */ public Colour HazardBgPulseColour;
        /* 0x3540 */ public Colour HazardDamagePulseColour;
        /* 0x3550 */ public Colour ShieldColour;
        /* 0x3560 */ public Colour ShieldDamageColour;
        /* 0x3570 */ public Colour ShieldBgColour;
        /* 0x3580 */ public Colour ShieldDamageBgColour;
        /* 0x3590 */ public Vector2f ScanLabelOffset;
        /* 0x3598 */ public Vector2f InteractionLabelOffset;
        /* 0x35A0 */ public Vector2f InteractionLabelSize;
        /* 0x35A8 */ public Vector2f InteractionLabelLineOffset;
        /* 0x35B0 */ public float InteractionLabelRadiusScaler;
        /* 0x35B4 */ public float InteractionLabelHeight;
        /* 0x35B8 */ public float InteractionLabelLineAlpha;
        /* 0x35BC */ public float InteractionIconInnerRadius;
        /* 0x35C0 */ public float InteractionIconOuterRadius;
        /* 0x35C4 */ public float InteractionLabelPixelHeightMin;
        /* 0x35C8 */ public float InteractionLabelPixelHeightMax;
        /* 0x35CC */ public float ScanTime;
        /* 0x35D0 */ public GcModelViewCollection ModelViews;
        /* 0x4390 */ public Colour CursorColour;
        /* 0x43A0 */ public Colour CursorConfirmColour;
        /* 0x43B0 */ public Colour CursorDeleteColour;
        /* 0x43C0 */ public float CursorHoverSlowFactor;
        /* 0x43C4 */ public float FrontendBGAlpha;
        /* 0x43C8 */ public float FrontendConfirmTimeMouseMultiplier;
        /* 0x43CC */ public float FrontendConfirmTimeFast;
        /* 0x43D0 */ public float FrontendConfirmTime;
        /* 0x43D4 */ public TkCurveType FrontendConfirmCurve;
        /* 0x43D8 */ public float FrontendCursorSize;
        /* 0x43DC */ public float FrontendCursorOffset;
        /* 0x43E0 */ public float PopupXClampOffset;
        /* 0x43E4 */ public float PopupSlotWidthOffset;
        /* 0x43E8 */ public float FrontendCursorWidth;
        /* 0x43EC */ public float FrontendDeactivateTime;
        /* 0x43F0 */ public float FrontendDeactivateSplit;
        /* 0x43F4 */ public float FrontendActivateTime;
        /* 0x43F8 */ public float FrontendActivateSplit;
        /* 0x43FC */ public float FrontendStatCircleWidth;
        /* 0x4400 */ public float FrontendStatCircleWidthExtra;
        /* 0x4404 */ public float FrontendBootTime;
        /* 0x4408 */ public float FrontendBootBarTime;
        /* 0x440C */ public TkCurveType FrontendBootBarCurve;
        /* 0x4410 */ public float PopupDebounceTime;
        /* 0x4414 */ public float PopupActivateTime;
        /* 0x4418 */ public float PopupDeactivateTime;
        /* 0x441C */ public TkCurveType PopupActivateCurve1;
        /* 0x4420 */ public TkCurveType PopupActivateCurve2;
        /* 0x4424 */ public float HatchPulseSpeed;
        /* 0x4428 */ public float HatchPulseWidth;
        /* 0x442C */ public float HatchPulsePauseTime;
        /* 0x4430 */ public int HatchCount;
        /* 0x4434 */ public float HatchCursorRadius;
        /* 0x4438 */ public float HatchAlphaMain;
        /* 0x443C */ public float HatchAlphaBase;
        /* 0x4440 */ public float HatchAlphaCursor;
        /* 0x4444 */ public float FrontendDoFNearPlaneMin;
        /* 0x4448 */ public float FrontendDoFNearPlaneMax;
        /* 0x444C */ public float FrontendDoFFarPlaneMin;
        /* 0x4450 */ public float FrontendDoFFarPlaneMax;
        /* 0x4454 */ public float FrontendDoFFarPlaneFadeMin;
        /* 0x4458 */ public float FrontendDoFFarPlaneFadeMax;
        /* 0x445C */ public float FrontendDoFBlurMultiplier;
        /* 0x4460 */ public bool FrontendDoFEnableBokeh;
        /* 0x4464 */ public TkCurveType FrontendDoFCurve;
        /* 0x4468 */ public float FrontendShineSpeed;
        /* 0x446C */ public float FrontendToolbarTextHeight;
        /* 0x4470 */ public float FrontendToolbarTextHeightSelected;
        /* 0x4474 */ public float FrontendTitleFontSpacing;
        /* 0x4478 */ public float NGuiPadSensitivity;
        /* 0x447C */ public float NGuiMouseSensitivity;
        /* 0x4480 */ public Vector2f NGuiTouchPadSensitivity;
        /* 0x4490 */ public Colour TargetMarkerColour;
        /* 0x44A0 */ public Colour TargetMarkerHighlightColour;
        /* 0x44B0 */ public float TargetMarkerScaleStart;
        /* 0x44B4 */ public float TargetMarkerScaleEnd;
        /* 0x44B8 */ public float TargetMarkerFadeAngleMin;
        /* 0x44BC */ public float TargetMarkerFadeAngleRange;
        /* 0x44C0 */ public float HitMarkerPulseSize;
        /* 0x44C4 */ public float HitMarkerPulseTime;
        /* 0x44D0 */ public Colour WantedColour;
        /* 0x44E0 */ public float PlanetPoleMaxDotProduct;
        /* 0x44E4 */ public float SpaceMapFoV;
        /* 0x44E8 */ public float SpaceMapAspectRatio;
        /* 0x44EC */ public float SpaceMapDistanceScale;
        /* 0x44F0 */ public float SpaceMapDistanceLogScaler;
        /* 0x44F4 */ public float SpaceMapScaleMin;
        /* 0x44F8 */ public float SpaceMapScaleRangeMin;
        /* 0x44FC */ public float SpaceMapScaleRangeMax;
        /* 0x4500 */ public float SpaceMapObjectScale;
        /* 0x4504 */ public float SpaceMapFreighterScale;
        /* 0x4508 */ public float SpaceMapStationScale;
        /* 0x450C */ public float SpaceMapPlanetScale;
        /* 0x4510 */ public float SpaceMapMoonScale;
        /* 0x4514 */ public float SpaceMapShipScale;
        /* 0x4518 */ public float SpaceMapOtherPlayerScale;
        /* 0x451C */ public float SpaceMapActionScale;
        /* 0x4520 */ public float SpaceMapPlayerScale;
        /* 0x4524 */ public float SpaceMapMarkerScale;
        /* 0x4528 */ public float SpaceMapDistance;
        /* 0x452C */ public float SpaceMapDistanceMultiplier;
        /* 0x4530 */ public float SpaceMapHorizonThickness;
        /* 0x4534 */ public float SpaceMapFadeAngleMin;
        /* 0x4538 */ public float SpaceMapFadeAngleMax;
        /* 0x453C */ public float SpaceMapCamHeight;
        /* 0x4540 */ public float SpaceMapCamAngle;
        /* 0x4544 */ public float SpaceMapCamDistance;
        /* 0x4548 */ public float SpaceMapShipScaleMin;
        /* 0x454C */ public float SpaceMapLightPitch;
        /* 0x4550 */ public float SpaceMapLightYaw;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x4554 */ public byte[] Padding4554;
        /* 0x4560 */ public Vector4f SpaceMapPosScaler;
        /* 0x4570 */ public Colour SpaceMapAttackColour;
        /* 0x4580 */ public Colour SpaceMapOtherPlayerColour;
        /* 0x4590 */ public Colour SpaceMapThreatColour;
        /* 0x45A0 */ public Colour SpaceMapNeutralColour;
        /* 0x45B0 */ public Colour SpaceMapDeathPointColour;
        /* 0x45C0 */ public GcSpaceMapObjectData SpaceMapMarkerData;
        /* 0x45F0 */ public GcSpaceMapObjectData SpaceMapPlanetData;
        /* 0x4620 */ public GcSpaceMapObjectData SpaceMapStationData;
        /* 0x4650 */ public GcSpaceMapObjectData SpaceMapShipData;
        /* 0x4680 */ public GcSpaceMapObjectData SpaceMapFreighterData;
        /* 0x46B0 */ public Vector2f HUDTargetHealthOffset;
        /* 0x46B8 */ public Vector2f HUDTargetHealthSize;
        /* 0x46C0 */ public Vector2f HUDTargetHealthIconOffset;
        /* 0x46C8 */ public float HUDTargetHealthIconSize;
        /* 0x46CC */ public float HUDTargetHealthDangerTime;
        /* 0x46D0 */ public float HUDTargetMarkerOffset;
        /* 0x46D4 */ public float HUDTargetMarkerSize;
        /* 0x46D8 */ public float HUDTargetIconOffset;
        /* 0x46DC */ public float HUDTargetIconSize;
        /* 0x46E0 */ public float HUDMarkerOffset;
        /* 0x46F0 */ public Colour HUDMarkerColour;
        /* 0x4700 */ public Colour HUDSpaceshipColour;
        /* 0x4710 */ public Colour HUDRelicMarkerColourDiscovered;
        /* 0x4720 */ public Colour HUDRelicMarkerColourUnknown;
        /* 0x4730 */ public Colour HUDOutpostColour;
        /* 0x4740 */ public Vector2f HUDMarkerPrimaryIndicatorOffset;
        /* 0x4748 */ public Vector2f HUDMarkerCompassPrimaryIndicatorOffset;
        [NMS(Size = 0x100)]
        /* 0x4750 */ public string HUDMarkerIcon;
        [NMS(Size = 0x100)]
        /* 0x4850 */ public string HUDMarkerPrimaryIndicatorIcon;
        [NMS(Size = 0x100)]
        /* 0x4950 */ public string HUDMarkerColourIcon;
        [NMS(Size = 0x100)]
        /* 0x4A50 */ public string HUDPointIcon;
        [NMS(Size = 0x100)]
        /* 0x4B50 */ public string HUDSpaceshipIcon;
        [NMS(Size = 0x100)]
        /* 0x4C50 */ public string HUDSaveIcon;
        [NMS(Size = 0x100)]
        /* 0x4D50 */ public string HUDDeathPointIcon;
        [NMS(Size = 0x100)]
        /* 0x4E50 */ public string HUDHexAnimIcon;
        [NMS(Size = 0x100)]
        /* 0x4F50 */ public string HUDCircleAnimIcon;
        /* 0x5050 */ public float HUDMarkerAnimSpeed;
        /* 0x5054 */ public float HUDMarkerAnimScale;
        /* 0x5058 */ public float HUDMarkerAnimOffset;
        /* 0x505C */ public float HUDMarkerAnimLoopTime;
        /* 0x5060 */ public TkCurveType HUDMarkerAnimAlphaCurve;
        /* 0x5064 */ public float HUDMarkerAnimCurve;
        /* 0x5068 */ public float HUDMarkerPrimaryIndicatorSize;
        /* 0x506C */ public float HUDMarkerHoverAngleTest;
        /* 0x5070 */ public float HUDMarkerWideHoverAngleTest;
        /* 0x5074 */ public float HUDMarkerHoverAngleTestShip;
        /* 0x5078 */ public float HUDMarkerNearFadeDistance;
        /* 0x507C */ public float HUDMarkerNearFadeRange;
        /* 0x5080 */ public float HUDMarkerFarDistance;
        /* 0x5084 */ public float HUDMarkerFarFadeRange;
        /* 0x5088 */ public float HUDMarkerScalerMin;
        /* 0x508C */ public float HUDMarkerScalerRange;
        /* 0x5090 */ public float HUDMarkerScalerSizeMin;
        /* 0x5094 */ public float HUDMarkerScalerSizeMax;
        /* 0x5098 */ public float HUDMarkerHorizonBlendRange;
        /* 0x509C */ public float HUDMarkerAlpha;
        /* 0x50A0 */ public float HUDMarkerModelFadeRange;
        /* 0x50A4 */ public float HUDMarkerModelFadeMinHeight;
        /* 0x50A8 */ public float HUDMarkerShowActualIconDistance;
        /* 0x50AC */ public float HUDMarkerShowActualSpaceIconDistance;
        /* 0x50B0 */ public float HUDMarkerActiveTime;
        /* 0x50B4 */ public TkCurveType HUDMarkerActiveCurve;
        /* 0x50B8 */ public float AltimeterResolution;
        /* 0x50BC */ public float AltimeterLineSpacing;
        /* 0x50C0 */ public float AltimeterWidth;
        /* 0x50C4 */ public float AltimeterMin;
        /* 0x50C8 */ public float AltimeterMax;
        /* 0x50CC */ public float AltimeterTextSize;
        /* 0x50D0 */ public float AltimeterMinValue;
        /* 0x50E0 */ public Colour AltimeterBandColour1;
        /* 0x50F0 */ public Colour AltimeterBandColour2;
        /* 0x5100 */ public Colour AltimeterColour1;
        /* 0x5110 */ public Colour AltimeterColour2;
        /* 0x5120 */ public float LockOnMarkerSize;
        /* 0x5124 */ public float LockOnMarkerSizeLock;
        /* 0x5130 */ public Colour LockOnMarkerActiveColour;
        /* 0x5140 */ public float MissileIconAttackPulseTime;
        /* 0x5144 */ public float MissileIconAttackPulseAmount;
        /* 0x5148 */ public float NGuiModelRotationDegreesX;
        /* 0x514C */ public float NGuiModelRotationDegreesY;
        /* 0x5150 */ public float NGuiModelRotationDegreesZ;
        /* 0x5154 */ public float NGuiModelViewDistanceGlobal;
        /* 0x5158 */ public float NGuiModelViewDistanceSuitPage;
        /* 0x515C */ public float NGuiModelViewDistanceWeaponPage;
        /* 0x5160 */ public float NGuiModelViewDistanceShipPage;
        /* 0x5164 */ public float NGuiModelViewDistanceDiscoveryPage;
        /* 0x5168 */ public float NGuiModelViewFov;
        /* 0x516C */ public float NGuiModelViewCdSmoothTime;
        /* 0x5170 */ public float NGuiAltPlacementDistanceScrollSpeed;
        /* 0x5174 */ public float NGuiPlacementAngleScrollSpeed;
        /* 0x5178 */ public float NGuiModelViewFractionOfBBHeightAboveReflectivePlane;
        [NMS(Size = 0x4, Ignore = true)]
        /* 0x517C */ public byte[] Padding517C;
        /* 0x5180 */ public Vector4f NGuiModelTranslationFactors;
        /* 0x5190 */ public Vector4f NGuiModelTranslationFactorsInteraction;
        /* 0x51A0 */ public Vector4f NGuiThumbnailModelTranslationFactors;
        /* 0x51B0 */ public float NGuiThumbnailModelRotationDegreesY;
        /* 0x51B4 */ public float NGuiThumbnailModelViewDistance;
        /* 0x51B8 */ public float NGuiCursorOffsetMultiplier;
        /* 0x51BC */ public float NGuiActiveAreaOffsetTime;
        /* 0x51C0 */ public Vector2f NGuiMin2DParallax;
        /* 0x51C8 */ public Vector2f NGuiMax2DParallax;
        /* 0x51D0 */ public Vector2f NGuiModelParallax;
        /* 0x51D8 */ public Vector2f NGuiShipInteractParallax;
        /* 0x51E0 */ public Vector2f InteractionWorldParallax;
        /* 0x51E8 */ public float TargetParallaxMouseMultiplier;
        /* 0x51EC */ public float TargetParallaxMaintenancePageMultiplier;
        /* 0x51F0 */ public float NGuiModelViewFadeInAfterRenderTime;
        /* 0x51F4 */ public TkCurveType NGuiModelViewFadeInAfterRenderCurve;
        /* 0x51F8 */ public bool NGuiUseSeparateLayersForModelAndReflection;
        [NMS(Size = 0x3, Ignore = true)]
        /* 0x51F9 */ public byte[] Padding51F9;
        /* 0x51FC */ public GcDiscoveryHelperTimings DiscoveryHelperTimings;
        /* 0x5208 */ public GcHUDStartupTable IntroTiming;
        /* 0x5288 */ public GcInventorySlotActionData InstallTechSlotAction;
        /* 0x52A4 */ public GcInventorySlotActionData BuildProductSlotAction;
        /* 0x52C0 */ public GcInventorySlotActionData ChargeSlotAction;
        /* 0x52DC */ public GcInventorySlotActionData RepairSlotAction;
        /* 0x52F8 */ public GcInventorySlotActionData NewSlotRevealAction;
        /* 0x5314 */ public GcInventorySlotActionData NewSlotPulseAction;
        /* 0x5330 */ public float ReportBaseFlashTime;
        /* 0x5334 */ public float ReportBaseFlashIntensity;
        /* 0x5338 */ public float ReportBaseFlashDelay;
        /* 0x533C */ public int ReportBaseTexWidth;
        /* 0x5340 */ public int ReportBaseTexHeight;
        /* 0x5344 */ public float ReportCameraSpeed;
        /* 0x5348 */ public float AmbientModeFadeTime;
        /* 0x534C */ public bool HideQuickMenuControls;
        /* 0x534D */ public bool QuickMenuAllowCycle;
        /* 0x5350 */ public float TextChatMaxDisplayTime;
        /* 0x5354 */ public float TextChatStayBigAfterTextInput;
        /* 0x5358 */ public int BuildingShopMaxItems;
        [NMS(Size = 0x4, Ignore = true)]
        /* 0x535C */ public byte[] EndPadding;
    }
}